<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
  
<mapper namespace="pers.student.admin.dao.SecurityUserMapper">  

<!-- 用户信息 resultMap -->
 <resultMap type="pers.student.admin.po.SecurityUser" id="userResultMap">
	 	<!-- id表示查询结果集中唯一标识 
	 	column：查询出来的列名
	 	property：type指定的pojo类型中的属性名
	 	最终resultMap对column和property作一个映射关系 （对应关系）
	 	-->
	 	<id column="id" property="id"/>

	 	<result column="username" property="userName"/>
	    <result column="email" property="email"/>
	    <result column="add_time" property="addTime"/>
	    <result column="status" property="status"/>
	    <result column="role_name" property="roleName"/>
</resultMap>

<!-- 用户的权限  resultMap-->
<resultMap type="pers.student.admin.po.SecurityUser" id="userPermissionResultMap">
	<id column="id" property="id"/>

	<collection property="permission" ofType="pers.student.admin.po.SecurityPermission">
		<id column="id" property="id"/>
		<result column="permission_name" property="permissionName"/>
	</collection>
</resultMap>

<!-- 查询sql -->
 <sql id="query_user_where">
 	 
	 <if test="userName != null and userName !=''">
	 and username=#{userName} 
	 </if>
	 
     <if test="email != null and email !=''">
	 and email=#{email} 
	 </if>
	 
	 
	<if test="ids !=null and ids!='' ">
		<!-- foreach  遍历集合  拼接sql  id in(1,2) -->
         <foreach collection="ids" item="item" open="id in(" close=")" separator="," >        
         	#{item}
         </foreach> 
	</if>
	 
 </sql>
 
<!-- 查询全部用户 -->
<select id="selectAll" resultMap="userResultMap">
   select * from ps_security_user
</select>

<!-- 根据id获取用户信息 -->
<select id="selectByPrimaryKey"  parameterType="java.lang.Integer" resultMap="userResultMap">
      select * from ps_security_user where id=#{id}
</select>

<!-- 根据用户某一unique字段查询信息 -->
<select id="selectByUniqueFiled" parameterType="pers.student.admin.po.SecurityUser" resultMap="userResultMap">
	select * from ps_security_user 
     <where>
      		<!--引用sql片段  -->
           <include refid="query_user_where"></include>
     </where> 
</select>

<!-- 模糊查询用户 -学生-->
<select id="selectUserByToken" parameterType="java.lang.String" resultMap="userResultMap">

	select u.id,u.username,u.email,u.add_time,u.status from ps_security_user u,ps_security_user_to_role ul where  ul.user_id=u.id and ul.role_id=8 and u.username  LIKE '%${value}%' 
</select>

<!-- 模糊查询所有用户 -->
<select id="selectAllUserByToken" parameterType="java.lang.String" resultMap="userResultMap">
	select u.*,r.role_name from ps_security_user u,ps_security_role r,ps_security_user_to_role ur where u.id=ur.user_id and r.id=ur.role_id and u.username LIKE '%${value}%'
</select>

<!-- 查询全部学生  -分页查询-->
<select id="selectStudent" parameterType="java.util.Map" resultMap="userResultMap">
	select u.id,u.username,u.email,u.add_time,u.status from ps_security_user u,ps_security_user_to_role ul where  ul.user_id=u.id and ul.role_id=8 limit #{position},#{pageSize}
</select>

<!--查询全部学生 数量  -->
<select id="findStudentCount" resultType="java.lang.Integer">
    select count(CASE WHEN ul.user_id=u.id and ul.role_id=8  THEN 1 ELSE NULL END) from ps_security_user u,ps_security_user_to_role ul
</select>


<!-- 查询所有用户-数量 -->
<select id="findUserCount" resultType="java.lang.Integer">
	select count(*) from ps_security_user
</select>

<!-- 查询所有用户 - 分页    -->
<select id="selectUserList" parameterType="java.util.Map" resultMap="userResultMap">
	select u.*,r.role_name from ps_security_user u,ps_security_role r,ps_security_user_to_role ur where u.id=ur.user_id and r.id=ur.role_id  limit #{position},#{pageSize}

</select>

<!-- 通过用户名获取角色 -->
<select id="selectUserRole" parameterType="java.lang.String" resultType="java.lang.String">

	select r.role_code from ps_security_user u,ps_security_role r,ps_security_user_to_role ur where u.id=ur.user_id and r.id=ur.role_id  and u.username=#{value}

</select>

<!-- 通过用户名 获取权限 -->
<select id="selectUserPersmission" parameterType="java.lang.String" resultMap="userPermissionResultMap">

    select u.id,p.id,p.permission_name from  ps_security_user u,ps_security_role r,ps_security_permission p, ps_security_user_to_role ur,ps_security_role_to_permission rp where u.id=ur.user_id and r.id=ur.role_id and p.id=rp.permission_id and r.id=rp.role_id  and u.username=#{value}
</select>

<!-- 添加用户 -->
<insert id="insert" parameterType="pers.student.admin.po.SecurityUser">
    <!-- 主键值返回 -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
        SELECT LAST_INSERT_ID()
    </selectKey>
    
    insert into ps_security_user (username,password,salt,status,email,add_time) 
    values(#{userName},#{password},#{salt},#{status},#{email},#{addTime})
    
</insert>

<!-- 删除用户 -批量-->
<delete id="deleteBatch"  parameterType="pers.student.admin.po.SecurityUser">
   delete from ps_security_user
   <where>
     <include refid="query_user_where"></include>
   </where>
   
</delete>

<!-- 修改用户 -->
<update id="updateByPrimaryKeySelective" parameterType="pers.student.admin.po.SecurityUser">
	update ps_security_user 
	<set>
	      <if test="userName !=null and userName !=''">
	        username=#{userName},
	      </if>
	      <if test="email !=null and email !=''">
	        email=#{email},
	      </if>
	      <if test="password !=null and password !=''">
	        password=#{password}, 
	      </if>
	      <if test="salt !=null and salt !=''">
	        salt=#{salt}
	      </if>
	     	      
	</set>	
	where id=#{id}
</update>

</mapper>
